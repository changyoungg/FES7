css를 먼저 만드는것

큰 틀을 먼저 만든다 1개의 큰 틀 div
첫 div 를 지정하고 시작함
div = type selector
만약 첫 div를 사용했을 때 너비 = 부모가 제공해주는 컨텐츠 영역의 크기 == 컨테이닝 블럭
width = property 속성
value = value 값
사용자 에이전트 스타일 시트 = 브라우저가 지원해주는 것 
width 값을 지정해주지 않았을 때 (초기 값 initial value) = auto 모든 property 는 초기값이 있다!!
width  100% 와 auto 는 다르다 마진 값을 넣어주는 것이기 때문에 컨텐츠 영역이 달라진다
100% = 마진 보더 패딩을 고려 안한다

그 안에 내용물 3가지 header contents footer 로 나눔

3가지 나눈 것을 파악하기 위해 공간 찾는 부분을 시각적으로 확인하기 위해 차이를 두는게 중요! ex) img background color
다만 그냥 div한테 줬을 경우 3가지에 다 들어가니까 클래스 header contents footer로 나눠서 시작함
div.header =  div이면서 header인것 디브가문의 헤더..
div 를 안넣은 경우 *가 들어감 = universal selector
강조 할 때 앞에 추가해주어야함 그래도 구분이 안갈 경우 여러 클래스를 넣어야함 ex) .div.chang.young
보통 3개의 틀에 .wrapper를 넣음 틀을 감싸기때문에

다음 으로는 더 세부적으로 나눔 이제 header 안에 이미지 제목 이름 등

css 초기화, reset css, 기본 스타일 초기화
맨 위에 적는게 좋다
initial 로 초기화를 하는 데 IE는 지원이 안되기 때문에 0을 적는것이였다 이제는 IE 없기 때문에 initial 정배
값을 초기화 할 때 initial 과 inherit 이 주된 값
이니셜은 css에서 정해져 있는 것, 인헤릿은 부모한테 받는 것, unset는 property 값을 보고 상속 할지 안할지를 정해줌
list-style-type = none 으로 함
h1, p margin initial

이 후 정렬을 함 오늘은 flex 사용 x
padding 위아래 정렬
이미지는 margin 0 auto 안됨 이유 = 초기 값이 inline 요소이기 때문에 가로로 배치됨 display block 을 이용해야 가능
text-align center 를 이용하는 상황에서는 h1 같은 경우에는 콘텐츠안에 가운데로 정렬 하는것이고 그래서 width 값이 정해질 경우 width 값 안에 가운데 정렬이 되는것
그래서 텍스트 같은 경우 margin 0 auto 를 쓰는게 좋을거 같다
클래스 선택을 자세하기 하지 않았지만 클래스를 더 만들지 않고 .header p 를 쓴다 자손 선택자를 사용 띄어쓰기 p를 사용한 경우 자식 자손 다 포함해버림
selector selector 사이에 띄어쓰기를 사용하는것은 combinator를 쓴다 함 descendent combinator 라고 함
자식 선택자를 사용 한 경우 child combinator ex ) > 어떤 콤비네이터를 사용했냐에 따라서 xx 콤비네이터라 불림

